type Task {
  id: ID!
  name: String!
  description: String
  priority: Priority
  completed: Boolean
  dateCreated: String
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum SortDirection {
  ASC
  DESC
}

enum SortOption {
  NAME
  PRIORITY
  DESCRIPTION
  COMPLETED
}

input NewTaskParam {
  name: String!
  description: String
  priority: Priority
}

input TaskCompletionParam {
  id: ID!
  completed: Boolean!
}

input TaskPriorityParam {
  id: ID!
  priority: Priority
}

input TaskSortParam {
  direction: SortDirection!
  sortBy: SortOption!
}

type Query {
  getTasks(sort: TaskSortParam): [Task]!
  getTask(id: ID!): Task
}

type Mutation {
  addNewTask(newTaskParam: NewTaskParam): Task!
  deleteTask(id: ID): ID!
  updateTaskCompletion(updateParam: TaskCompletionParam!): Boolean!
  updateTaskPriority(updateParam: TaskPriorityParam!): Priority!
}
